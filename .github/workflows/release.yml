# Run this workflow on any commit that lands on the main/master branch
on: { push: { branches: [master] } }

jobs:
  # Run the same set of checks that are run for a Pull Request but only if this
  # is not the merge commit. Kinda just wasting time running the same check over
  # the exact same code.
  checks:
    if: github.event.head_commit.committer.username != 'web-flow'
    uses: ./.github/workflows/checks.yml

  release:
    runs-on: ubuntu-latest
    needs: [checks]

    # Make sure this job runs only when the "checks" are
    # either all a success or have been skipped
    # see: https://github.com/actions/runner/issues/491
    if: always() && (needs.checks.result == 'success' || needs.checks.result == 'skipped')

    # This release job should only ever have one instance of it running at any
    # given time otherwise we may some very interesting CHANGELOGs :)
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: false

    # Enable OIDC
    # see: https://blog.chainguard.dev/zero-friction-keyless-signing-with-github-actions/
    permissions:
      id-token: write

    steps:
      # Login as a Github App bot user (installation token), instead of using
      # the built in "secrets.GITHUB_TOKEN" as this gives us greater flexibility
      # over the permissions of the token, such as allowing workflows to workflows.
      - id: generate_token
        name: Authenticate as BOT User
        uses: tibdex/github-app-token@v1.5.1
        with:
          app_id: ${{ secrets.BOT_ID }}
          private_key: ${{ secrets.BOT_KEY }}

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Cache ASDF Tools
        uses: actions/cache@v2.1.7
        with:
          key: ${{ runner.os }}-asdf4-${{ hashFiles('task', '.tool-versions', '.tool-versions.lock', '.asdf/.plugin-versions') }}
          restore-keys: ${{ runner.os }}-asdf4-
          path: |
            ./.asdf/bin/**/*
            ./.asdf/utils/**/*
            ./.asdf/v0.9.0/**/*

      - name: Get nodejs version
        run: echo ::set-output name=NODE_VERSION::$(cat .tool-versions | grep nodejs | xargs -n 1 | tail -n1)
        id: nodev

      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nodev.outputs.NODE_VERSION }}

      - name: Cache Node Modules
        uses: actions/cache@v2.1.7
        with:
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
          path: |
            ~/.npm
            ./node_modules

      - name: Install node deps
        run: npm ci

      - name: Execute semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          CAS_API_KEY: ${{ secrets.CAS_API_KEY }}
